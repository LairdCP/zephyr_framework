#
# Copyright (c) 2020 Laird Connectivity
#
# It is provided "as is", without warranty/guarantee of any kind, express of
# implied, including but not limited to the warranties of merchantability,
# fitness for a particular purpose and non-infringement.
#

menuconfig FRAMEWORK
     bool "Laird Connectivity Message Framework"
	 help
	 	Inter-task communication using messages

if FRAMEWORK

choice
     prompt "Framework Assertion"
     optional
	 help
	 	The default is disabled.

config FWK_ASSERT_ENABLED
     bool "Enable Framework assertion"

config FWK_ASSERT_ENABLED_USE_ZEPHYR
     bool "Framework assertion maps to Zephyr assertion"
	 help
	 	The framework assertion is enabled if Zephyr assertions are enabled.

endchoice

if FWK_ASSERT_ENABLED || FWK_ASSERT_ENABLED_USE_ZEPHYR

config FWK_DEBUG
	bool "Enable Framework Debug (and debug assertions)"

config FWK_ASSERT_ON_BROADCAST_FROM_ISR
	bool "Assert when a broadcast msg occurs in ISR context"
	default y
	help
		Broadcast can be time consuming on some processors.

endif # FWK_ASSERT_ENABLED || FWK_ASSERT_ENABLED_USE_ZEPHYR

config FWK_RESET_DELAY_MS
	int "Delay before software reset (from an assertion or reset message)"
	default 5000

config FWK_MAX_MSG_RECEIVERS
	int "The maximum number of messages receivers"
	default 4

config BUFFER_POOL_SIZE
	int "Zephyr heap used by the framework"
	default 4096

config BUFFER_POOL_STATS
	bool "Enable buffer pool statistics"

config BUFFER_POOL_WINDOW_SIZE
	int "Number of entries in buffer pool stats for keeping track of recently used sizes"
	default 0
	help
		Requires 2 bytes per entry

config BUFFER_POOL_CHECK_DOUBLE_FREE
	bool "Print error if duplicate free is detected"
	help
		Requires 4 bytes per allocation.

config BUFFER_POOL_SHELL
	bool "Enable Buffer Pool Shell"

config BRACKET_HANDLER
	bool "Enable JSON bracket handler {} module"

config BRACKET_INTERCEPTS_ESCAPED_FORWARD_SLASH
	bool "Bracket handler replaces '\/' with '/'"
	depends on BRACKET_HANDLER
	default y
	help
		iOS escapes '/' with "\/"
		If this is intercepted by the bracket handler,
		then the buffer sizes don't need to be doubled to handle a base-64 encoded image.

endif # FRAMEWORK
